#!/bin/bash

### BEGIN INIT INFO
# Provides:        cm160
# Required-Start:  $network $remote_fs $syslog
# Required-Stop:   $network $remote_fs $syslog
# Default-Start:   2 3 4 5
# Default-Stop:
# Short-Description: Start cm160 daemon
### END INIT INFO

NAME=cm160
PID_FILE=/opt/eagleowl/cm160.pid
CM160_DIR=/opt/eagleowl/

get_cm160_pid() {
	PID=0

	if [ -z "$PID_FILE" ]; then
#		echo "-z pidfle"
        return 0
    fi

	if [ -f "$PID_FILE" ]; then
        PID=$(cat $PID_FILE)
#		echo "found pidfile ${PID}"
        if [ -z "${PID}" ]; then
#            echo "pid is null"
			/bin/rm $PID_FILE
        else
            if [ "${PID}" -gt 0 ]; then
				echo "pid > 0"
                IS_EXISTING=$(ps auxw | grep -w $PID | grep -v grep | wc -l)
#                echo "IS_EXISTING ${IS_EXISTING}" 
				if [ ${IS_EXISTING} -gt 0 ]; then
#					echo "IS_EXISTING > 0"
                    return $PID
                else
#					echo "IS_EXISTING <= 0"
                    /bin/rm $PID_FILE
                fi
            fi
        fi
    fi

    return 0
}


case "$1" in
start)
	printf "%-50s" "Starting $NAME..."
	get_cm160_pid
	if [ "${PID}" -gt 0 ]; then
		echo  "Already running with PID ${PID}"
	    #exit 99
	else
    	pushd $CM160_DIR > /dev/null
	    ${CM160_DIR}cm160 > /dev/null 2>&1 &
		#${CM160_DIR}cm160 > /tmp/cm160.log &
	    echo $! >$PID_FILE
	    popd > /dev/null
	fi
;;
status)
        printf "%-50s" "Checking $NAME..."
        if [ -f $PID_FILE ]; then
            PID=`cat $PID_FILE`
            if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
                printf "%s\n" "Process dead but pidfile exists"
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service not running"
        fi
;;
stop)
        printf "%-50s" "Stopping $NAME"
            PID=`cat $PID_FILE`
        if [ -f $PID_FILE ]; then
            kill -HUP $PID
            printf "%s\n" "Ok"
            rm -f $PID_FILE
        else
            printf "%s\n" "pidfile not found"
        fi
;;

restart)
  	$0 stop
  	$0 start
;;

*)
        echo "Usage: $0 {status|start|stop|restart}"
        exit 1
esac


